---
import { blogs } from "$lib/utils";
import { Img, Date } from "$lib/components";

type Props = {
  count?: number;
};

const { count } = Astro.props;
---

<section class="breakout">
  {
    blogs.length > 0 &&
      blogs.slice(0, count).map(async (post) => {
        const { remarkPluginFrontmatter } = await post.render();
        const { minutesRead } = remarkPluginFrontmatter;
        const { data } = post;

        return (
          <a href={`/blog/${post.slug}`}>
            <article class="no-mb">
              {data.image && (
                <Img
                  src={data.image.src}
                  width="540"
                  height="200"
                  alt="My post"
                  class="no-mb"
                />
              )}

              <div class="meta">
                <hgroup>
                  <small class="disable">
                    <Date date={data.date} onlyDate /> &bull; {minutesRead}
                  </small>
                  <h6>{data.title}</h6>
                </hgroup>
              </div>
            </article>
          </a>
        );
      })
  }
</section>

<style>
  a {
    text-decoration: inherit;
    text-decoration: none;
  }

  article:hover {
    background-color: whitesmoke;
    color: black;
  }
  article:hover hgroup > * {
    color: black;
  }

  /* section {
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(var(--grid-post-count), 1fr);
  } */

  section {
    display: column;
    columns: var(--grid-post-count);
    gap: var(--margin-bottom);
  }

  section > a {
    display: block;
    break-inside: avoid;
    margin-bottom: var(--margin-bottom);

    will-change: background-color, color;

    transition:
      color 60ms ease-out,
      background-color 160ms ease-out;
  }

  small {
    display: inline-block;
    margin-bottom: 0.25rem;
  }

  .meta > :last-child {
    margin-bottom: 0px;
  }
</style>
