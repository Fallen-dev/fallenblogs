---
import "@picocss/pico";
import "$lib/styles/global.css";

import Nav from "@/Nav.astro";
import Footer from "@/Footer.astro";
import PlaceholderImage from "$assets/placeholder.jpg";

interface Props {
  title?: string;
  description?: string;
  publishedOn?: string | Date;
  image?: string;
}

const {
  title: _title,
  description: _description,
  publishedOn,
  image = PlaceholderImage.src,
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const navTitle = "Fallenblogs";
const description = _description
  ? _description
  : "Articles on Web Development, JavaScript, Linux and Databases to solve problems and to help to learn new technologies.";

const title = _title ? `${_title} â€¢ ${navTitle}` : navTitle;

const links = [
  { name: "Home", href: "/" },
  { name: "Blog", href: "/blog" },
  { name: "About", href: "/about" },
];
---

<html lang="en" data-theme="dark">
  <head>
    <!-- Global Metadata -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta
      http-equiv="Content-Security-Policy"
      content="block-all-mixed-content"
    />

    <!-- Font preloads -->
    <link
      rel="preload"
      href="/fonts/Satoshi-Regular.woff"
      as="font"
      type="font/woff"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/Satoshi-Bold.woff"
      as="font"
      type="font/woff"
      crossorigin
    />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={publishedOn ? "article" : "website"} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:locale" content="en" />
    <meta property="og:image" content={new URL(image, Astro.url)} />
    <meta property="og:image:alt" content={title} />
    {
      publishedOn && (
        <>
          <meta property="article:author" content="Fallen | Rishav" />
          <meta
            property="article:published_time"
            content={publishedOn.toString()}
          />
        </>
      )
    }

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />
    <meta property="twitter:image:alt" content={title} />

    <!-- Change theme color of url bar -->
    <meta name="theme-color" content="#201a19" />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: dark)"
      content="#201a19"
    />
  </head>
  <body>
    <Nav title={navTitle} {links} />

    <main class="container">
      <slot />
    </main>

    <Footer author={navTitle} {links} />
    <script>
      import { cookies, setTheme } from "$lib/utils";

      const theme = cookies.get("theme");

      if (theme === "light") setTheme("light");
      else setTheme("dark");
    </script>

    <script>
      import { reveal } from "$lib/utils";

      reveal("[data-animate]", { y: [90, 0], opacity: 1 }, { delay: 1 }, 0.25);
    </script>
  </body>
</html>
