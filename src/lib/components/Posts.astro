---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

import Date from "@/Date.astro";

const { posts, count } = Astro.props;

interface Props {
  posts: CollectionEntry<"blog">[];
  count?: number;
}

const arr = posts
  .slice(0, count)
  .filter((post) =>
    process.env.NODE_ENV === "production" ? post.data.publishedOn : post,
  )
  .sort((a, b) => {
    const fst = a.data.publishedOn;
    const snd = b.data.publishedOn;

    if (!fst || !snd) return 0;

    return snd.valueOf() - fst.valueOf();
  });
---

<section id="content">
  {
    arr &&
      arr.map(async ({ slug, data: { image, publishedOn, title }, render }) => {
        const rendered = await render();
        const { minutesRead } = rendered.remarkPluginFrontmatter;

        return (
          <article data-animate-post>
            <div class="img-container">
              <Image src={image} alt="Poster of the post" loading="eager" />
            </div>

            <hgroup>
              <h5>{title}</h5>
              <h6>
                <small>
                  {publishedOn ? (
                    <Date date={publishedOn} />
                  ) : (
                    <small class="draft">DRAFT</small>
                  )}
                  &bullet;
                  {minutesRead}
                </small>
              </h6>
            </hgroup>

            <div class="link">
              <a href={"/blog/" + slug} role="button">
                Read &rarr;
              </a>
            </div>
          </article>
        );
      })
  }
</section>

<style>
  .draft {
    padding: 0.125rem 0.25rem;
    border-radius: 0.125rem;
    background-color: var(--secondary);
    color: var(--secondary-inverse);
  }
</style>

<script>
  import { reveal } from "$lib/utils";

  reveal("[data-animate-post]", { y: [50, 0], opacity: [0, 1] });
</script>
