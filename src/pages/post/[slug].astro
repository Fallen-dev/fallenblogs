---
import Body from "$com/Body.astro";
import Posts from "$lib/components/Posts.astro";
import TableOfContents from "$lib/components/TableOfContents.svelte";
import Date from "$lib/components/Date.astro";
import { Image } from "astro:assets";
import { getCollection, getEntry } from "astro:content";

const { slug } = Astro.params;

if (!slug) return;

const post = await getEntry("blogs", slug);
if (!post) return Astro.redirect("/", 404);

const followUpPost =
  post.data.followUp && (await getEntry("blogs", post.data.followUp.slug));

const relatedPosts = await getCollection(
  "blogs",
  ({ data: { tags }, slug }) =>
    post.slug !== slug &&
    tags
      .flat()
      .find((t) =>
        post.data.tags.find((tag) => tag.toLowerCase() === t.toLowerCase()),
      ),
);

const { Content, headings, remarkPluginFrontmatter } = await post.render();
type Data = { slug: string; depth: number; text: string };

const toc = [] as any;

headings?.forEach((item: Data) => {
  switch (item.depth) {
    case 1:
      toc.push(item);
      break;
    case 2:
      toc.push(item);
      break;
    case 3:
      toc.push([item]);
      break;
    case 4:
      toc.push([[item]]);
      break;
    case 5:
      toc.push([[[item]]]);
      break;
    case 6:
      toc.push([[[[item]]]]);
      break;
    default:
      break;
  }
});
---

<Body
  title={post.data.title}
  article
  publishedOn={post.data.publishedOn}
  image={post.data.image}
>
  <a href="/" class="contrast"><p>&larr; Back to post</p></a>

  <section>
    <hgroup id="post-title">
      <h1 class="title">{post.data.title}</h1>
      <h6>
        <Date date={post.data.publishedOn} text="Published on" />
         &bull; {remarkPluginFrontmatter.minutesRead}
      </h6>
    </hgroup>
  </section>

  <section>
    <figure id="hero">
      <Image
        src={post.data.image}
        alt="Just an image"
        widths={[720, 1024]}
        sizes="720px, (min-width: 1024px) 1024px"
        format="webp"
        loading="eager"
      />
    </figure>
  </section>

  <div id="prose">
    <article id="toc">
      <h6>Table of contents</h6>
      <TableOfContents headings={toc} />
    </article>

    <figure id="md">
      <Content />
    </figure>
  </div>

  <section id="bottom-navigation">
    <a href="/" class="contrast">&larr; Back to post</a>

    {
      followUpPost && (
        <a
          href={`/post/${followUpPost.slug}`}
          role="button"
          class="contrast outline"
        >
          <strong>Follow up:</strong>&ThinSpace;
          {followUpPost.data.title} &rarr;
        </a>
      )
    }
  </section>

  <Posts posts={relatedPosts} />
</Body>

<script>
  import { fadeIn } from "$lib/utils";

  fadeIn(".title");
</script>

<script>
  const headings = document.querySelectorAll(
    "#md > h1, #md > h2, #md > h3, #md > h4, #md > h5, #md > h6",
  );

  function headingsObserver(entries: IntersectionObserverEntry[]) {
    entries.forEach((entry) => {
      const link = document.querySelector(`#toc a[href="#${entry.target.id}"]`);

      if (entry.isIntersecting) link?.classList.remove("contrast");
      else link?.classList.add("contrast");
    });
  }

  const observer = new IntersectionObserver(headingsObserver, {
    threshold: 1,
    rootMargin: "40% 0px -60% 0px",
  });

  headings.forEach((heading) => observer.observe(heading));
</script>
